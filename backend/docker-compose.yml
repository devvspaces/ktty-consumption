version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ktty-companions-db
    environment:
      POSTGRES_USER: ktty_user
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: ktty_companions
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ktty_user -d ktty_companions"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ktty-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ktty-companions-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ktty_user
      DB_PASSWORD: secure_password
      DB_NAME: ktty_companions
      # Add your blockchain configuration here
      # RPC_URL: https://mainnet.infura.io/v3/YOUR_INFURA_KEY
      # CONTRACT_ADDRESS: 0x...
      # OWNER_PRIVATE_KEY: 0x...
      # DEPLOYMENT_BLOCK: 18000000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ktty-network
    volumes:
      - ./src/data/tokenMapping.json:/app/src/data/tokenMapping.json:ro

  # Optional: Redis for caching (future enhancement)
  # redis:
  #   image: redis:7-alpine
  #   container_name: ktty-companions-redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - ktty-network

volumes:
  postgres_data:

networks:
  ktty-network:
    driver: bridge