/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  KttyWorldCompanions,
  KttyWorldCompanionsInterface,
} from "../KttyWorldCompanions";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseTokenUri",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "batchMint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchRevealTokens",
    inputs: [
      {
        name: "tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "exists",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokenCode",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hiddenMetadataUri",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "_hiddenMetadataUri",
        type: "string",
        internalType: "string",
      },
      {
        name: "_maxSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRevealed",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isTokenRevealed",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "maxSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mintAll",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "quantity",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintingContract",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revealToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBaseTokenUri",
    inputs: [
      {
        name: "_baseTokenUri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBulkTokenCodes",
    inputs: [
      {
        name: "tokenIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "codes",
        type: "string[]",
        internalType: "string[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setHiddenMetadataUri",
    inputs: [
      {
        name: "_hiddenMetadataUri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setMintingContract",
    inputs: [
      {
        name: "_mintingContract",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setRevealed",
    inputs: [
      {
        name: "_revealed",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateName",
    inputs: [
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BaseTokenUriUpdated",
    inputs: [
      {
        name: "baseTokenUri",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BatchMinted",
    inputs: [
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "startTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "quantity",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "HiddenMetadataUriUpdated",
    inputs: [
      {
        name: "hiddenMetadataUri",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MetadataUpdated",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MintingContractUpdated",
    inputs: [
      {
        name: "newMintingContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NameUpdated",
    inputs: [
      {
        name: "newName",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Revealed",
    inputs: [
      {
        name: "revealed",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenCodesUpdated",
    inputs: [
      {
        name: "tokenIds",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
      {
        name: "codes",
        type: "string[]",
        indexed: false,
        internalType: "string[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenRevealed",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensRevealed",
    inputs: [
      {
        name: "tokenIds",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ArrayLengthMismatch",
    inputs: [],
  },
  {
    type: "error",
    name: "BatchSizeZero",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721IncorrectOwner",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InsufficientApproval",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721NonexistentToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ExceedsMaxSupply",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidTokenId",
    inputs: [],
  },
  {
    type: "error",
    name: "MaxSupplyReached",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyOwnerOrMintingContract",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "TokenCodeNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a080604052346100cd57306080527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549060ff8260401c166100be57506001600160401b036002600160401b031982821601610079575b604051612f6f9081620000d282396080518181816116e801526118eb0152f35b6001600160401b031990911681179091556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f8080610059565b63f92ee8a960e01b8152600490fd5b5f80fdfe60806040818152600480361015610014575f80fd5b5f3560e01c92836301ffc9a714611e0f5750826306fdde0314611d62578263081812fc14611d1d578263095ea7b314611c3c57826318160ddd14611bff57826323b872dd14611be85782632e0d64e614611afa57826342842e0e14611ad257826343508b0514611aa65782634f1ef286146118af5782634f558e79146118775782634fdd43cb1461174c57826352d1902d146116d557826354214f69146116a657826359c1d4931461159e5782635a46cf3d146114f45782636352211e146114c557826370a0823114611472578263715018a61461140b5782637a0101a21461134b5782637c901f371461102f57826384da92a714610ee25782638da5cb5b14610eae5782639047cd7a146109f557826395652cfa1461080757826395d89b4114610734578263a22cb4651461069b578263a45ba8e7146105b7578263a69956eb14610529578263ad3cb1cc146104e5578263b18f691c1461043f578263b88d4fde146103f2578263c56e13751461036d578263c87b56dd14610337578263d2f6f67d146102f0578263d5abeb01146102c6578263e0a808531461024557508163e985e9c5146101fc575063f2fde38b146101cd575f80fd5b346101f85760203660031901126101f8576101f66101e9611ebf565b6101f161294c565b612882565b005b5f80fd5b346101f857806003193601126101f857602090610217611ebf565b610228610222611ed5565b916123d9565b9060018060a01b03165f52825260ff815f20541690519015158152f35b346101f85760203660031901126101f857358015158091036101f8575f80516020612e9a833981519152917f20a5b4e05b29089957b31c76110692167d828e9ecb1be33824e11609370e80216020809361029d61294c565b5f80516020612dba83398151915260ff1981541660ff83161790558351908152a1515f198152a1005b50346101f8575f3660031901126101f8576020905f80516020612eba833981519152549051908152f35b50346101f8575f3660031901126101f8577f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b3940165490516001600160a01b039091168152602090f35b90346101f85760203660031901126101f857610356610369923561252f565b9051918291602083526020830190611e9a565b0390f35b346101f85760203660031901126101f857610386611ebf565b61038e61294c565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39401680546001600160a01b0319166001600160a01b039290921691821790557f8f33f486527167d5accd60eaf992d22601a5968f30d577eeec8f0100c91012505f80a2005b346101f85760803660031901126101f85761040b611ebf565b610413611ed5565b906064356001600160401b0381116101f8576101f69361043591369101611fa6565b9160443591612411565b90346101f857806003193601126101f857610458611ebf565b9060243561046461294c565b5f80516020612eba83398151915254917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f54808403938085116104d257146104c357506101f69350818111156104bb5750906129a5565b9050906129a5565b5163d05cb60960e01b81528490fd5b601187634e487b7160e01b5f525260245ffd5b50346101f8575f3660031901126101f85780516103699161050582611f4f565b60058252640352e302e360dc1b602083015251918291602083526020830190611e9a565b90346101f85760203660031901126101f857813590815f525f80516020612e7a83398151915260205260ff815f205416156105a8576020925060ff5f80516020612dba8339815191525416918215610585575b50519015158152f35b9091505f525f80516020612dda833981519152825260ff815f205416908361057c565b516307ed98ed60e31b81529050fd5b50346101f8575f3660031901126101f8578051905f90825f80516020612e1a8339815191529283546105e881612065565b90818452602095600191876001821691825f1461067457505060011461062b575b505050610369929161061c910385611f6a565b51928284938452830190611e9a565b5f90815286935091905f80516020612eda8339815191525b82841061065c575050508201018161061c610369610609565b8054848a018601528895508794909301928101610643565b60ff19168782015293151560051b8601909301935084925061061c91506103699050610609565b90346101f857806003193601126101f8576106b4611ebf565b90602435918215158093036101f8576001600160a01b031692831561071f57506106dd336123d9565b835f52602052805f2060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b836024925191630b61174360e31b8352820152fd5b50346101f8575f3660031901126101f8578051905f90827f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930192835461077881612065565b90818452602095600191876001821691825f146106745750506001146107ab57505050610369929161061c910385611f6a565b5f90815286935091907ff4bad0a69248f59680a4f2b3000328cec71a413447c96781cfe5996daa8c456e5b8284106107ef575050508201018161061c610369610609565b8054848a0186015288955087949093019281016107d6565b90346101f85761081636611fec565b9261081f61294c565b6001600160401b0384116109e257507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b3940139261085a8454612065565b601f8111610993575b505f93601f82116001146108f3579181602094936108c6827fe0b4aa3a614e11365fec002edc82449b5849402d025b31c4770f0e270286e690955f80516020612e9a833981519152995f916108e8575b508160011b915f199060031b1c19161790565b90555b6108dd845192839287845287840191612339565b0390a1515f198152a1005b90508501358a6108b3565b601f198216815f525f80516020612dfa833981519152905f5b81811061097b57509183915f80516020612e9a833981519152977fe0b4aa3a614e11365fec002edc82449b5849402d025b31c4770f0e270286e69095602098979510610962575b5050600182811b0190556108c9565b8401355f19600385901b60f8161c191690558780610953565b8588013583556020978801976001909301920161090c565b845f525f80516020612dfa833981519152601f830160051c810191602084106109d8575b601f0160051c01905b8181106109cd5750610863565b5f81556001016109c0565b90915081906109b7565b604190634e487b7160e01b5f525260245ffd5b346101f85760a03660031901126101f857610a0e611ebf565b6001600160401b036024358181116101f857610a2d9036908501611fa6565b6044358281116101f857610a449036908601611fa6565b916064358181116101f857610a5c9036908701611fa6565b917ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009586549560ff878a1c16159584881697881580610ea7575b6001809a149081610e9d575b159081610e94575b50610e845767ffffffffffffffff19811689178a5587610e65575b50610ace612d15565b610ad6612d15565b8351858111610de9575f80516020612e3a83398151915290610b0181610afc8454612065565b6122d3565b6020601f96878311600114610dfc57610b3192915f9183610cf9575b50508160011b915f199060031b1c19161790565b90555b8051858111610de9577f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930191610b698354612065565b868111610d87575b50602090868311600114610d04579180610ba592610bb89695945f92610cf95750508160011b915f199060031b1c19161790565b90555b610bb0612d15565b6101f1612d15565b610bc0612d15565b6084355f80516020612eba8339815191525583519283116109e257505f80516020612e1a83398151915292610bfe83610bf98654612065565b61226d565b6020918311600114610c9057610c2a92915f9183610c855750508160011b915f199060031b1c19161790565b90555b5f80516020612dba833981519152805460ff19169055610c4957005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29260209268ff000000000000000019815416905551908152a1005b015190508880610b1d565b859291601f19831691855f525f80516020612eda833981519152925f5b818110610ce157508411610cc9575b505050811b019055610c2d565b01515f1960f88460031b161c19169055878080610cbc565b82840151855589969094019360209384019301610cad565b015190508e80610b1d565b9392918a91601f19821690845f527ff4bad0a69248f59680a4f2b3000328cec71a413447c96781cfe5996daa8c456e915f5b818110610d6f57509683610bb89810610d57575b505050811b019055610ba8565b01515f1960f88460031b161c191690558d8080610d4a565b8289015184558e959093019260209283019201610d36565b835f527ff4bad0a69248f59680a4f2b3000328cec71a413447c96781cfe5996daa8c456e8780850160051c82019260208610610de0575b0160051c01908b905b828110610dd5575050610b71565b5f8155018b90610dc7565b92508192610dbe565b604184634e487b7160e01b5f525260245ffd5b8b9291601f19831691855f525f80516020612f1a833981519152925f5b818110610e4d57508411610e35575b505050811b019055610b34565b01515f1960f88460031b161c191690558d8080610e28565b8284015185558f969094019360209384019301610e19565b68ffffffffffffffffff1916680100000000000000011789558a610ac5565b8a5163f92ee8a960e01b81528490fd5b9050158c610aaa565b303b159150610aa2565b5087610a96565b50346101f8575f3660031901126101f8575f80516020612e5a8339815191525490516001600160a01b039091168152602090f35b346101f857610ef036611fec565b9091610efa61294c565b6001600160401b0382116109e257505f80516020612e3a83398151915292610f2682610afc8654612065565b5f93601f8311600114610f9d5790610f8d91610f7884807f9f7688a97f1ac51fe03bac18af18d6810f9f11f0db08c59b1938a9ac825ef744985f91610f9257508160011b915f199060031b1c19161790565b90555b51928392602084526020840191612339565b0390a1005b9050870135896108b3565b601f19831694815f525f80516020612f1a833981519152955f5b818110611017575095610f8d939291857f9f7688a97f1ac51fe03bac18af18d6810f9f11f0db08c59b1938a9ac825ef7449810610ffe575b5050600184811b019055610f7b565b8601355f19600387901b60f8161c191690558680610fef565b86830135885560019097019660209283019201610fb7565b90346101f857806003193601126101f8576001600160401b039082358281116101f85761105f9036908501612035565b906024906024358581116101f85761107a9036908801612035565b92909661108561294c565b83850361133d57841561132f575f979396975b858110611172575050506110b5908451938585528585019161237d565b936020948381038685015281815285810196868360051b83010197845f935b85851061111a57505f80516020612e9a83398151915289897f90ac0c0aa7a0c396d9494f545f571b38381d9d52c6e899fea05290cf4ea32d1e8a8e038ba1515f198152a1005b90919293949599601f198282030184528a35601e19843603018112156101f85783018a81019190358681116101f85780360383136101f8576111618c928392600195612339565b9c01940195019392959491906110d4565b6111818187869b9a979b612359565b35805f526020905f80516020612e7a833981519152825260ff895f2054161561131f578683101561130d5760059183831b8c0135601e198d3603018112156101f8578c01928335928c84116101f857833603838601136101f8575f527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39401782528a5f209361120e8554612065565b601f928382116112d3575b50505f918411600114611268579261124e92819260019796955f9361125b575b5050508160011b915f199060031b1c19161790565b90555b0197939697611098565b01013590508e8080611239565b601f959493929519831691845f52865f20925f5b8181106112ba57509084600198921061129f575b50505050831b83019055611251565b5f1960f88660031b161c19920101351690558c808080611290565b828401890135855560019094019391880191880161127c565b865f52845f209084808801821c830193878910611304575b01901c01905b81811015611219575f81556001016112f1565b935082936112eb565b84603285634e487b7160e01b5f52525ffd5b88516307ed98ed60e31b81528490fd5b85516301960e9560e11b8152fd5b855163512509d360e11b8152fd5b50346101f8575f3660031901126101f8578051905f90827f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39401392835461138f81612065565b90818452602095600191876001821691825f146106745750506001146113c257505050610369929161061c910385611f6a565b5f90815286935091905f80516020612dfa8339815191525b8284106113f3575050508201018161061c610369610609565b8054848a0186015288955087949093019281016113da565b346101f8575f3660031901126101f85761142361294c565b5f80516020612e5a83398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101f85760203660031901126101f85761148b611ebf565b906001600160a01b038216156114af576020836114a7846123a1565b549051908152f35b6024905f8451916322718ad960e21b8352820152fd5b90346101f85760203660031901126101f8576114e3602092356128f3565b90516001600160a01b039091168152f35b90346101f85760203660031901126101f857813591611511612bb6565b825f525f80516020612e7a83398151915260205260ff825f20541615611590575f80516020612e9a83398151915260208484815f525f80516020612dda8339815191528352805f20600160ff198254161790555190807fafd1af0d18662bc4cbe66cd3885857264bb71d267eb57c0add879e84a5be31775f80a28152a1005b90516307ed98ed60e31b8152fd5b90346101f857602091826003193601126101f85780356001600160401b0381116101f8576115cf9036908301612035565b9290916115da612bb6565b8315611698575f5b84811061161e5782518681527f5f36dfedf769ad12bf71aec843edc397276a255b70d51016d99f5fb020dfd9029080610f8d818a01898961237d565b611629818686612359565b35805f525f80516020612e7a833981519152875260ff845f2054161561168857905f80516020612e9a83398151915287836001945f525f80516020612dda8339815191528252865f208560ff198254161790558651908152a1016115e2565b83516307ed98ed60e31b81528390fd5b90516301960e9560e11b8152fd5b50346101f8575f3660031901126101f85760209060ff5f80516020612dba833981519152541690519015158152f35b90346101f8575f3660031901126101f8577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361173f57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b5163703e46dd60e11b8152fd5b90346101f85761175b36611fec565b9261176461294c565b6001600160401b0384116109e257505f80516020612e1a8339815191529261179081610bf98654612065565b5f93601f82116001146117f1579181602094936108c6827f8588e0263ed34c27af83ef22a6264c2d4edc5a1f5985b84358d501a9e324b1cd955f80516020612e9a833981519152995f916108e857508160011b915f199060031b1c19161790565b601f198216815f525f80516020612eda833981519152905f5b81811061185f57509183915f80516020612e9a833981519152977f8588e0263ed34c27af83ef22a6264c2d4edc5a1f5985b84358d501a9e324b1cd95602098979510610962575050600182811b0190556108c9565b8588013583556020978801976001909301920161180a565b90346101f85760203660031901126101f857602091355f525f80516020612e7a833981519152825260ff815f20541690519015158152f35b816003193601126101f8576118c2611ebf565b6024356001600160401b0381116101f8576118e09036908401611fa6565b926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115611a78575b50611a685761192461294c565b82169181516352d1902d60e01b81526020818681875afa5f9181611a34575b5061195f57505051634c9c8ce360e01b81529182015260249150fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc949392919490818103611a1e5750843b15611a085780546001600160a01b0319168317905551907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28351156119f15750505f808360206101f695519101845af46119eb612c21565b91612d56565b91509150346119fc57005b63b398979f60e01b8152fd5b5051634c9c8ce360e01b81529182015260249150fd5b84602491845191632a87526960e21b8352820152fd5b9091506020813d602011611a60575b81611a5060209383611f6a565b810103126101f857519087611943565b3d9150611a43565b815163703e46dd60e11b81528490fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141586611917565b50346101f8573660031901126101f8576101f6611ac1611ebf565b611ac961294c565b602435906129a5565b50346101f8576101f690611ae536611eeb565b91925192611af284611f20565b5f8452612411565b346101f857602090816003193601126101f857803590815f525f80516020612e7a833981519152835260ff845f20541615611bda57505f527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b3940178152815f2091805180935f908054611b6a81612065565b91828552600191876001821691825f14610674575050600114611b9a57505050610369929161061c910385611f6a565b8693505f92919252825f20915f925b828410611bc2575050508201018161061c610369610609565b8054848a018601528895508794909301928101611ba9565b83516307ed98ed60e31b8152fd5b346101f8576101f6611bf936611eeb565b9161209d565b50346101f8575f3660031901126101f8576020907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f549051908152f35b90346101f857806003193601126101f857611c55611ebf565b9160243590611c63826128f3565b9033151580611d0a575b80611ced575b611cd657506001600160a01b039384169382918591167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f9081525f80516020612efa8339815191526020522080546001600160a01b0319169091179055005b60249084519063a9fbf51f60e01b82523390820152fd5b50611cf7826123d9565b335f5260205260ff845f20541615611c73565b506001600160a01b038216331415611c6d565b90346101f85760203660031901126101f85760209135611d3c816128f3565b505f525f80516020612efa833981519152825260018060a01b03815f2054169051908152f35b50346101f8575f3660031901126101f8578051905f90825f80516020612e3a833981519152928354611d9381612065565b90818452602095600191876001821691825f14610674575050600114611dc657505050610369929161061c910385611f6a565b5f90815286935091905f80516020612f1a8339815191525b828410611df7575050508201018161061c610369610609565b8054848a018601528895508794909301928101611dde565b90346101f85760203660031901126101f857359063ffffffff60e01b82168092036101f8576020916380ac58cd60e01b8114908115611e68575b8115611e57575b5015158152f35b6301ffc9a760e01b14905083611e50565b635b5e139f60e01b81149150611e49565b5f5b838110611e8a5750505f910152565b8181015183820152602001611e7b565b90602091611eb381518092818552858086019101611e79565b601f01601f1916010190565b600435906001600160a01b03821682036101f857565b602435906001600160a01b03821682036101f857565b60609060031901126101f8576001600160a01b039060043582811681036101f8579160243590811681036101f8579060443590565b602081019081106001600160401b03821117611f3b57604052565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b03821117611f3b57604052565b90601f801991011681019081106001600160401b03821117611f3b57604052565b6001600160401b038111611f3b57601f01601f191660200190565b81601f820112156101f857803590611fbd82611f8b565b92611fcb6040519485611f6a565b828452602083830101116101f857815f926020809301838601378301015290565b9060206003198301126101f8576004356001600160401b03928382116101f857806023830112156101f85781600401359384116101f857602484830101116101f8576024019190565b9181601f840112156101f8578235916001600160401b0383116101f8576020808501948460051b0101116101f857565b90600182811c92168015612093575b602083101461207f57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691612074565b6001600160a01b038281169391841561225557825f52827f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079302958660205260409684885f20541696331515806121b4575b506120fc9088612178576123a1565b60018154019055825f52602052865f20816bffffffffffffffffffffffff60a01b825416179055857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a416928383036121575750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b5f8581525f80516020612efa8339815191526020526040902080546001600160a01b03191690556121a8896123a1565b80545f190190556123a1565b929350909180612207575b156121ce57908592915f6120ed565b8786886121eb576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015612239575b806121bf5750855f525f80516020612efa8339815191526020523385895f205416146121bf565b50612243876123d9565b335f5260205260ff885f205416612212565b604051633250574960e11b81525f6004820152602490fd5b601f8111612279575050565b5f80516020612e1a8339815191525f525f80516020612eda833981519152906020601f840160051c830193106122c9575b601f0160051c01905b8181106122be575050565b5f81556001016122b3565b90915081906122aa565b601f81116122df575050565b5f80516020612e3a8339815191525f525f80516020612f1a833981519152906020601f840160051c8301931061232f575b601f0160051c01905b818110612324575050565b5f8155600101612319565b9091508190612310565b908060209392818452848401375f828201840152601f01601f1916010190565b91908110156123695760051b0190565b634e487b7160e01b5f52603260045260245ffd5b81835290916001600160fb1b0383116101f85760209260051b809284830137010190565b6001600160a01b03165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793036020526040902090565b6001600160a01b03165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020526040902090565b9192909261242081858561209d565b833b61242d575b50505050565b60209060018060a01b03809516946124746040519485938493630a85bd0160e11b988986523360048701521660248501526044840152608060648401526084830190611e9a565b03815f875af15f91816124ea575b506124b95782612490612c21565b80519190826124b257604051633250574960e11b815260048101839052602490fd5b6020915001fd5b6001600160e01b031916036124d257505f808080612427565b60249060405190633250574960e11b82526004820152fd5b9091506020813d602011612527575b8161250660209383611f6a565b810103126101f857516001600160e01b0319811681036101f857905f612482565b3d91506124f9565b805f5260205f80516020612e7a833981519152815260409160ff835f205416156128715760ff5f80516020612dba83398151915254161580612850575b612753575f527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b3940178152815f20908251905f91835492816125ab85612065565b9182825284820196600196866001821691825f146127355750506001146126f7575b506125da92500382611f6a565b8051156126e6577f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b3940139182549561260f87612065565b156126cf57519586945f9461262383612065565b92600181169081156126ae5750600114612660575b5050505061264e61265d94839251938491611e79565b0103601f198101835282611f6a565b90565b9091929694505f525f80516020612dfa833981519152905f915b8383106126985750505061265d9461264e9185010192945f80612638565b805489840189015288965091870191810161267a565b60ff19168886015250505080151502840101915061264e61265d5f80612638565b95505050505050516126e081611f20565b5f815290565b8451635d5fc18360e11b8152600490fd5b9150505f528183805f20865f915b85831061271c5750506125da93508201015f6125cd565b8091929450548385880101520191018490868593612705565b60ff19168a526125da95151560051b85010192505f91506125cd9050565b5f80516020612e1a8339815191529081549061276e82612065565b156128425761277c90612c50565b93519384925f9261278c81612065565b9160019180831690811561282257506001146127d9575b50505092816127be856005959461265d975194859201611e79565b0164173539b7b760d91b815203601a19810184520182611f6a565b90919293505f525f80516020612eda833981519152905f915b83831061280c575050508201830190806127be60056127a3565b80548884018801528795509186019181016127f2565b60ff19168888015250505080151502830184019150806127be60056127a3565b50505050516126e081611f20565b50805f525f80516020612dda833981519152825260ff835f2054161561256c565b82516307ed98ed60e31b8152600490fd5b6001600160a01b039081169081156128db575f80516020612e5a83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f8181527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b0316908115612934575090565b60249060405190637e27328960e01b82526004820152fd5b5f80516020612e5a833981519152546001600160a01b0316330361296c57565b60405163118cdaa760e01b8152336004820152602490fd5b9190820180921161299157565b634e487b7160e01b5f52601160045260245ffd5b8115612ba4577f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918254926129da8285612984565b5f80516020612eba8339815191525410612b92576001808501809511612991575f5b838110612a4f575050918183612a366040947f59f9fb6d992d2aee0ed338bb4c504a17fd3f67ae91a3135bc2ef947e308c41b29654612984565b9055825194855260208501526001600160a01b031692a2565b612a598187612984565b5f8181525f80516020612e7a8339815191526020908152604091829020805460ff19168617905590916001600160a01b03888116908115612b7b57825f527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930290818552855f205416908115159485612b3f575b612ad58c6123a1565b898154019055845f5252845f20826bffffffffffffffffffffffff60a01b8254161790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4612b29575081016129fc565b516339e3563760e11b81525f6004820152602490fd5b5f8581525f80516020612efa8339815191526020526040902080546001600160a01b0319169055612b6f836123a1565b80545f19019055612acc565b8451633250574960e11b81525f6004820152602490fd5b60405163c30436e960e01b8152600490fd5b6040516301960e9560e11b8152600490fd5b5f80516020612e5a83398151915254336001600160a01b0391821614159081612bf3575b50612be157565b60405163b1a0fc1f60e01b8152600490fd5b90507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39401654163314155f612bda565b3d15612c4b573d90612c3282611f8b565b91612c406040519384611f6a565b82523d5f602084013e565b606090565b8015612cf7575f81805b612ce05750612c6881611f8b565b90612c766040519283611f6a565b808252601f19612c8582611f8b565b013660208401375b80928015612cd9575f198201918211612991578193600a92603090848406820180921161299157855111156123695760f81b6001600160f81b0319165f1a908401601f01530491612c8d565b5050905090565b905f198114612991576001600a9101910480612c5a565b50604051612d0481611f4f565b60018152600360fc1b602082015290565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615612d4457565b604051631afcd79f60e31b8152600490fd5b90612d7d5750805115612d6b57602081519101fd5b60405163d6bda27560e01b8152600490fd5b81511580612db0575b612d8e575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612d8656fe8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b3940118b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b394015653880e782a1976184427caa99fcd9c4fbd3bcfdce5474bb55542e389d92aa958b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39401280bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793009016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b3940149428dcbe773ffde983d366e27dc72d5f9be6e309154036dd48f60fbc0784be688b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b394010331789adb7bba5dc8d7679e5e86b686188cedb6d0bc9007acd47e91fb40ab54380bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930437c58c799b6609234b945e882912ee9ad34948a1dfaa20a97485e1a7752bbf81a26469706673582212206bde9267218b78b33b139d792b9116a0708f1954afae51f005f8bfa84e74213c64736f6c63430008160033";

type KttyWorldCompanionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KttyWorldCompanionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KttyWorldCompanions__factory extends ContractFactory {
  constructor(...args: KttyWorldCompanionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KttyWorldCompanions & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): KttyWorldCompanions__factory {
    return super.connect(runner) as KttyWorldCompanions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KttyWorldCompanionsInterface {
    return new Interface(_abi) as KttyWorldCompanionsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KttyWorldCompanions {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as KttyWorldCompanions;
  }
}
